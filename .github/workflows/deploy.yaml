name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # or whatever branch you want to trigger the deployment from

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # or the version you're using

      - name: Install dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, zip
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev

      - name: Deploy to EC2
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: 'ec2-user'
          EC2_HOST: '18.228.173.125'
          PROJECT_PATH: '/var/www/html/juntatransparente'

        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Copy files to EC2
          rsync -avr --delete-after \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude 'storage/framework/cache/data' \
            -e "ssh -o StrictHostKeyChecking=no" \
            . $EC2_USER@$EC2_HOST:$PROJECT_PATH

          # Run deployment commands
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            cd /var/www/html/juntatransparente
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            exit
          EOF
